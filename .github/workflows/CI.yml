name: CI
on:
  pull_request:
    branches:
      - develop
      - master
  push:
    branches:
      - develop
      - master

jobs:
  matrix-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pytest pytest-cov coveralls
          python3 -m pip install -e .
          
      - name: Run Tests with Coverage
        run: |
          pytest Regressions/test_automatic_regression.py -v --disable-warnings --cov=RCAIDE --cov-config=.coveragerc --cov-report=lcov
          
      - name: Save Coverage Data
        if: success()
        run: |
          mkdir -p coverage
          mv .coverage coverage/.coverage.${{ matrix.os }}.${{ matrix.python-version }}
          mv coverage.lcov coverage/coverage.${{ matrix.os }}.${{ matrix.python-version }}.lcov
          
      - name: Upload Coverage Data
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: coverage/

  coveralls:
    needs: matrix-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          
      - name: Install coverage tools
        run: |
          python -m pip install --upgrade pip
          pip install coverage coveralls
          
      - name: Download Coverage Data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data
          path: coverage
          
      - name: Combine Coverage
        run: |
          cd coverage
          coverage combine .coverage.*
          mv .coverage ../.coverage
          cd ..
          
      - name: Upload to Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true
        run: coveralls --service=github

  finish:
    needs: coveralls
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true